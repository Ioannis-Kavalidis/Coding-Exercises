@import "var";
@import "function";
@import "body/first-box";
@import "menu/menu-box";

$red: #ab0520;
$blue: #0c234b;
$green: #4a634e;

/**
 * Functions to generate hlsa & rgba color codes
 *
 */

/**
 * This is a Sass map. It is neat.
 * It's similar to a JSON array, with key value pairs.
 * Not sure what's up with the syntax highlighting...
 */
$colors: (
  red: $red,
  red-lt: tint($red, 30%),
  red-ltr: tint($red, 60%),
  blue: $blue,
  blue-lt: tint($blue, 30%),
  blue-ltr: tint($blue, 50%),
  green: $green,
  green-lt: tint($green, 30%),
  green-ltr: tint($green, 50%),
);

*,
*:before,
*:after {
  box-sizing: border-box;
}

body {
  color: #444;
  padding: 0 5%;
  line-height: 1.4;
}

.colors {
  /**
   * Here is where we use the Sass map declared above.
   *
   * Basic syntax example:
   *
   * @each [key], [value] in [map] {
   * 	.thing-#{key}
   * 		color: #{value}
   * }
   *
   * For each key/value pair in the map, the @each function will run and output the code inside.
   * Neato.
   */
  @each $color-name, $color-value in $colors {
    $rgbacolor: rgba-str($color-value);
    $hslacolor: hsla-str($color-value);
    &--#{$color-name} {
      .colors__swatch {
        background-color: $color-value;
      }
      .colors__label {
        &:before {
          content: "#{$color-value}\A #{$rgbacolor}\A #{$hslacolor}";
        }
      }
    }
  }
  padding: 2em 0;
  overflow: hidden;
  list-style: none;
  text-align: center;

  &__item {
    @include inline-block;
    margin: 0 1em 1em 0;
    background: #f1f1f1;
    padding: 5px;
    border: solid 1px #ddd;
  }

  &__swatch {
    display: block;
    width: 100%;
    height: 0;
    padding-bottom: 100%;
    margin: 0 auto;
  }

  &__label {
    display: block;
    color: #545454;
    display: block;
    padding: 5px;
    white-space: pre;
    text-align: left;
  }
}

.notes {
  li {
    margin-bottom: 0.5em;
  }
}
